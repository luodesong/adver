<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="configuration.xsl"?>
<!--
  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License. See accompanying LICENSE file.
-->

<!-- Put site-specific property overrides in this file. -->


<configuration>
    <!-- datanode存储的数据块的大小（256MB），单位是字节 -->
    <property>
        <name>dfs.blocksize</name>
        <value>268435456</value>
    </property>
    <!-- 给HDFS集群取一个逻辑名称 -->
    <property>
        <name>dfs.nameservices</name>
        <value>mycluster</value>
    </property>
    <!-- 逻辑名称背后真实的两个NN起逻辑名 -->
    <property>
        <name>dfs.ha.namenodes.mycluster</name>
        <value>nn1,nn2</value>
    </property>
    <!-- nn1对应的真实访问地址 -->
    <property>
        <name>dfs.namenode.rpc-address.mycluster.nn1</name>
        <value>min1:8020</value>
    </property>
    <!-- nn2对应的真实访问地址 -->
    <property>
        <name>dfs.namenode.rpc-address.mycluster.nn2</name>
        <value>min2:8020</value>
    </property>
    <!-- nn1的web服务对应的真实访问地址 -->
    <property>
        <name>dfs.namenode.http-address.mycluster.nn1</name>
        <value>min1:50070</value>
    </property>
    <!-- nn2的web服务对应的真实访问地址 -->
    <property>
        <name>dfs.namenode.http-address.mycluster.nn2</name>
        <value>min2:50070</value>
    </property>
    <!-- activeNN和StandByNN的数据共享目录 -->
    <!-- 这个共享目录的本质是JNs集群 -->
    <property>
        <name>dfs.namenode.shared.edits.dir</name>
        <value>
            qjournal://min1:8485;min2:8485;min3:8485/mycluster
        </value>
    </property>
    <property>
        <name>dfs.namenode.name.dir</name>
        <value>/opt/hadoop/hdfs/namenode</value>
    </property>
    <property>
        <name>dfs.datanode.data.dir</name>
        <value>/opt/hadoop/hdfs/datanode</value>
    </property>
    <property>
        <name>dfs.journalnode.edits.dir</name>
        <value>/opt/hadoop/hdfs/journalnode</value>
    </property>
    <!-- 启动自动的失败转移机制 -->
    <property>
        <name>dfs.ha.automatic-failover.enabled</name>
        <value>true</value>
    </property>
    <!-- 失败转移控制器代理类 -->
    <property>
        <name>dfs.client.failover.proxy.provider.mycluster</name>
        <value>
            org.apache.hadoop.hdfs.server.namenode.ha.ConfiguredFailoverProxyProvider
        </value>
    </property>
    <!-- ssh隔离机制 start -->
    <property>
        <name>dfs.ha.fencing.methods</name>
        <value>
            sshfence
            shell(/bin/true)
        </value>
    </property>
    <property>
        <name>dfs.ha.fencing.ssh.private-key-files</name>
        <value>/root/.ssh/id_rsa</value>
    </property>
    <!-- ssh隔离机制 end -->
</configuration>
